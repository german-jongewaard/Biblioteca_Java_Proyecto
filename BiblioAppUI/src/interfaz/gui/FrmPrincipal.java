package interfaz.gui;

/**
 * Created by German Jongewaard de Boer  
 */

import biblioteca.persistencia.Archivo;
import biblioteca.listas.ListaCategoria;
import biblioteca.listas.Categoria;
import biblioteca.listas.ListaItem;
import biblioteca.objetos.DiscoCompacto;
import biblioteca.objetos.Item;
import biblioteca.objetos.Libro;
import biblioteca.objetos.Revista;
import biblioteca.persistencia.Exportar;
import biblioteca.persistencia.Importar;
import interfaz.modelos.ModeloItem;
import java.awt.Toolkit;
import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class FrmPrincipal extends javax.swing.JFrame {

    private Categoria mCatSelected = null;
    private FormDiscoCompacto mFDisco = null;
    private FormRevista mFRevista = null;
    private FormLibro mFLibro = null;
    private FormHelp mFHelp = null;
            
    public FrmPrincipal() {
        initComponents();
        setLocationRelativeTo(null);
         

        //Cargar el tree con las categorias
        cargarCategorias();

        //Cargar la grilla con los contactos
        //ListaItem items = Archivo.getDatos().getCategorias().get(0);
        ListaItem items = Archivo.getDatos().getItems();
        setearGrilla(items);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnAgregarLibro = new javax.swing.JButton();
        btnAgregarRevista = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnImportar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        pnlCategoria = new javax.swing.JPanel();
        btnNuevaCat = new javax.swing.JButton();
        txtNuevaCat = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeCategorias = new javax.swing.JTree();
        btnAyuda = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("App Biblioteca - Germán");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar1.setRollover(true);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/Editar.png"))); // NOI18N
        btnEditar.setToolTipText("Editar ");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/Borrar.png"))); // NOI18N
        btnBorrar.setToolTipText("Borrar ");
        btnBorrar.setFocusable(false);
        btnBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBorrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBorrar);

        btnAgregarLibro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/book.png"))); // NOI18N
        btnAgregarLibro.setToolTipText("Crear Libro");
        btnAgregarLibro.setFocusable(false);
        btnAgregarLibro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarLibro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarLibroActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAgregarLibro);

        btnAgregarRevista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/revista.png"))); // NOI18N
        btnAgregarRevista.setToolTipText("Crear Revista");
        btnAgregarRevista.setFocusable(false);
        btnAgregarRevista.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarRevista.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregarRevista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarRevistaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAgregarRevista);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/disco.png"))); // NOI18N
        jButton2.setToolTipText("Crear CD");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        btnImportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/import.png"))); // NOI18N
        btnImportar.setToolTipText("Importar Archivo");
        btnImportar.setFocusable(false);
        btnImportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImportar);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/export.png"))); // NOI18N
        jButton1.setToolTipText("Exportar Archivo");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator1);

        lblBuscar.setText("Buscar:  ");
        jToolBar1.add(lblBuscar);

        txtBuscar.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBuscar.setToolTipText("Buscar");
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        jToolBar1.add(txtBuscar);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/Find.png"))); // NOI18N
        btnBuscar.setToolTipText("Buscar");
        btnBuscar.setFocusable(false);
        btnBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBuscar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBuscar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setDividerLocation(160);

        btnNuevaCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/category.png"))); // NOI18N
        btnNuevaCat.setToolTipText("Agregar Categoría");
        btnNuevaCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCatActionPerformed(evt);
            }
        });

        txtNuevaCat.setToolTipText("Introduzca una Categoría");

        javax.swing.GroupLayout pnlCategoriaLayout = new javax.swing.GroupLayout(pnlCategoria);
        pnlCategoria.setLayout(pnlCategoriaLayout);
        pnlCategoriaLayout.setHorizontalGroup(
            pnlCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCategoriaLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(txtNuevaCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNuevaCat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlCategoriaLayout.setVerticalGroup(
            pnlCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCategoriaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevaCat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNuevaCat)))
        );

        treeCategorias.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeCategoriasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(treeCategorias);

        btnAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/ayuda.png"))); // NOI18N
        btnAyuda.setToolTipText("Ayuda");
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAyuda)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAyuda)
                .addGap(8, 8, 8))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblItems);

        jSplitPane1.setRightComponent(jScrollPane2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCatActionPerformed
        if (txtNuevaCat.getText() != null && !txtNuevaCat.getText().isEmpty()) {
            ListaCategoria lista = Archivo.getDatos().getCategorias();
            //int newNum = lista.size() + 1;
            //Categoria aux = new Categoria(newNum, txtNuevaCat.getText());

            if (lista.filtrar(txtNuevaCat.getText()).size() == 0) {
                
                Categoria aux = new Categoria(txtNuevaCat.getText().trim());
                lista.add(aux);
                txtNuevaCat.setText("");
                cargarCategorias();
            } else {
                JOptionPane.showMessageDialog(this, "La categoria ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la categoria", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnNuevaCatActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrar();
    }//GEN-LAST:event_formWindowClosing

    private void treeCategoriasValueChanged(javax.swing.event.TreeSelectionEvent evt)//GEN-FIRST:event_treeCategoriasValueChanged
    {//GEN-HEADEREND:event_treeCategoriasValueChanged
        txtBuscar.setText("");
        if (((DefaultMutableTreeNode) treeCategorias.getLastSelectedPathComponent()).getUserObject() instanceof Categoria) {
            mCatSelected = (Categoria) ((DefaultMutableTreeNode) treeCategorias.getLastSelectedPathComponent()).getUserObject();
            // Enviamos directamente el objeto categoria porque el objeto hereda de una LinkedList
            setearGrilla(mCatSelected);
        } else {
            mCatSelected = null;
            /*
             Estoy un linkedlist y el primer elemento de la linkedlist 
            es la categoria Default (Esta categoria agrupa a todos los item de mi aplicacion)
             */
            Categoria catDefault = Archivo.getDatos().getCategorias().get(0);
            setearGrilla(catDefault);
        }
    }//GEN-LAST:event_treeCategoriasValueChanged

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBuscarActionPerformed
    {//GEN-HEADEREND:event_btnBuscarActionPerformed
        refrescar();

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblItemsMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tblItemsMouseClicked
    {//GEN-HEADEREND:event_tblItemsMouseClicked

        Item i = ((ModeloItem) tblItems.getModel()).getItem(tblItems.getSelectedRow());
        if (i != null) {
            JOptionPane.showMessageDialog(this, i, "Información del Adicional", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_tblItemsMouseClicked

    public boolean editar() {
        Object[] opciones = {"Aceptar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "Tienes que seleccionar un campo para editar", "Mensaje de Confirmacion",
                JOptionPane.YES_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");

        if (eleccion == JOptionPane.YES_OPTION) {
            return true;
        } else {
            return false;
        }
    }

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnEditarActionPerformed
    {//GEN-HEADEREND:event_btnEditarActionPerformed
        if (tblItems.getSelectedRow() > -1) {
            Item i = ((ModeloItem) tblItems.getModel()).getItem(tblItems.getSelectedRow());
            if (i != null) {
                if (i instanceof Libro) {
                    FormLibro fLibro = new FormLibro();
                    fLibro.setPadre(this);
                    fLibro.setLibro((Libro) i);
                    fLibro.setVisible(true);
                } else if (i instanceof Revista) {
                    if (i != null) {
                        FormRevista fRevista = new FormRevista();
                        fRevista.setPadre(this);
                        fRevista.setRevista((Revista) i);
                        fRevista.setVisible(true);
                    }
                } else if (i instanceof DiscoCompacto) {
                    FormDiscoCompacto fDiscoCompacto = new FormDiscoCompacto();
                    fDiscoCompacto.setPadre(this);
                    fDiscoCompacto.setDiscoCompacto((DiscoCompacto) i);
                    fDiscoCompacto.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento para editar ", "Información del Adicional", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento para editar ", "Información del Adicional", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed

        JFileChooser filechooser = new JFileChooser();
        int returnVal = filechooser.showOpenDialog(this);
        File file = filechooser.getSelectedFile();
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            new Importar(file.getAbsoluteFile().toString());
            Archivo.guardar();
            cargarCategorias();
            refrescar();
        }
    }//GEN-LAST:event_btnImportarActionPerformed

    private void btnAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarLibroActionPerformed
        mFLibro = new FormLibro();
        mFLibro.setPadre(this);
        mFLibro.setVisible(true);
    }//GEN-LAST:event_btnAgregarLibroActionPerformed

    private void btnAgregarRevistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarRevistaActionPerformed
        mFRevista = new FormRevista();
        mFRevista.setPadre(this);
        mFRevista.setVisible(true);
    }//GEN-LAST:event_btnAgregarRevistaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        mFDisco = new FormDiscoCompacto();
        mFDisco.setPadre(this);
        mFDisco.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public boolean borrar() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "¿En realidad desea borrar este campo?", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) {
            return true;
        } else {
            return false;
        }
    }

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        if (tblItems.getSelectedRow() > -1) {
            Item i = ((ModeloItem) tblItems.getModel()).getItem(tblItems.getSelectedRow());
            if (i != null) {
                if (borrar() == true) {
                    ListaCategoria lc = i.getCategorias();
                    for (Categoria cat : lc) {
                        i.borrarCategoria(cat);
                    }
                    Archivo.getDatos().getItems().remove(i);
                    Archivo.guardar();
                    refrescar();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento a borrar", "Información del Adicional", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento a borrar", "Información del Adicional", JOptionPane.INFORMATION_MESSAGE);
        }        
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        int returnVal = filechooser.showSaveDialog(this);
        File file = filechooser.getSelectedFile();
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            new Exportar(file.getAbsoluteFile().toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        mFHelp = new FormHelp();
        mFHelp.setPadre(this);
        mFHelp.setVisible(true);        
    }//GEN-LAST:event_btnAyudaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarLibro;
    private javax.swing.JButton btnAgregarRevista;
    private javax.swing.JButton btnAyuda;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnImportar;
    private javax.swing.JButton btnNuevaCat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JPanel pnlCategoria;
    private javax.swing.JTable tblItems;
    private javax.swing.JTree treeCategorias;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNuevaCat;
    // End of variables declaration//GEN-END:variables

    public void cargarCategorias() {
        DefaultMutableTreeNode raiz = new DefaultMutableTreeNode();
        raiz.setUserObject("Mi Biblioteca");
        ListaCategoria lista = Archivo.getDatos().getCategorias();
        for (Categoria item : lista) {
            DefaultMutableTreeNode aux = new DefaultMutableTreeNode(item);
            raiz.add(aux);
            //interno.add(aux);
        }

        DefaultTreeModel modelo = new DefaultTreeModel(raiz);

        treeCategorias.setModel(modelo);

    }

    private void setearGrilla(LinkedList<Item> lista) {
        ModeloItem modeloItems = new ModeloItem(lista);
        tblItems.setModel(modeloItems);

    }

    public void refrescar() {
        if (!txtBuscar.getText().isEmpty()) {
            //Filtramos.
            LinkedList<Item> res;
            if (mCatSelected == null) {
                res = Archivo.getDatos().getItems().filtrar(txtBuscar.getText());
            } else {
                res = mCatSelected.filtrar(txtBuscar.getText());
            }
            setearGrilla(res);

        } else {
            //Ponemos el conjunto completo.
            if (mCatSelected == null) {
                setearGrilla(Archivo.getDatos().getItems());
            } else {
                setearGrilla(mCatSelected);
            }

        }

    }

    public void cerrar() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane, "En realidad desea realizar cerrar la aplicacion", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) {
            System.exit(0);
        } else {
        }
    }  
}
